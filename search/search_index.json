{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\ud83d\ude80 Getting started \u00b6 Guide and instructions for setting up the Numberly SDK for Android apps Requirements compileSdkVersion 30 minSdkVersion 16+ 1. Install the SDK \u00b6 Gradle Manually Add the repository to your project level build.gradle under allprojects , or in settings.gradle under dependencyResolutionManagement repositories { [...] maven { url \"https://numberly.jfrog.io/artifactory/android\" } } Add the dependency to your app level build.gradle file implementation 'com.numberly:sdk-android:x.x.x' Download latest SDK version After unarchiving the downloaded numberly-sdk-android-x.x.x.zip file, include the sdk-x.x.x.aar in your android/app/libs folder. Make sure your lib folder is included in your app level build.gradle with its dependencies apply plugin: 'kotlin-kapt' [...] dependencies { implementation fileTree ( dir: 'libs' , include: [ '*.aar' ]) api 'com.google.firebase:firebase-messaging:23.0.0' api \"org.jetbrains.kotlin:kotlin-stdlib:1.4.30\" api 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.4.3' api 'androidx.lifecycle:lifecycle-extensions:2.2.0' api 'com.android.volley:volley:1.2.1' api 'androidx.room:room-runtime:2.4.0' implementation 'androidx.core:core-ktx:1.7.0' kapt 'androidx.room:room-compiler:2.4.0' [...] } Important Download the numberly-sdk-android-x.x.x.zip not the source code zip. 2. Create and add the configuration file \u00b6 Create the numberly.properties file in the application\u2019s assets folder located at android/app/src/main/assets app_key = the app key provided by numberly notification_icon_name = your icon resource name. Tip If you need specific configuration for your SDK based on build types or product flavors, just add another numberly.properties file in the targeted flavor / build type For example: to add specific configuration for an integ flavor, add the config file to the android/app/src/integ/assets folder ! Tip Icon drawables should be inside android/app/res/drawable . You can create on by right-click on drawable > New > Image Asset > Notification Icons Options \u00b6 You can customize the configuration with the following properties: Key Type Required Default Description app_key String The app key provided by Numberly. notification_icon_name String The icon resource name. It will be the icon used in Android's notification center notification_icon_color String #FFFFFFFF The icon color in hexadecimal format. Default is white. app_env String The app environment (dev, staging, prod...) 3. Add the Firebase configuration file \u00b6 Important This guide assumes that you've already configured your android application to connect to Firebase . If this is not the case, please flow this instructions to do so. Add the google-services.json file to /android/app . 4. Start the SDK \u00b6 Here we are! Now you can simply init Numberly in the Application's onCreate method Note You will need to have a custom Application file for this Follow this guide on how to do so. Kotlin Java override fun onCreate () { super . onCreate () Numberly . init ( this ) [ ... ] } @Override public void onCreate () { super . onCreate (); Numberly . init ( this ); [ ... ] } Troubleshooting \u00b6 If you want to validate your implementation you can active the Numberly logs: Kotlin Java Numberly . setDebugMode ( true ) Numberly . setDebugMode ( true ); Tips It's highly recommended to disable logs on production.","title":"\ud83d\ude80 Getting Started"},{"location":"#-getting-started","text":"Guide and instructions for setting up the Numberly SDK for Android apps Requirements compileSdkVersion 30 minSdkVersion 16+","title":"\ud83d\ude80 Getting started"},{"location":"#1-install-the-sdk","text":"Gradle Manually Add the repository to your project level build.gradle under allprojects , or in settings.gradle under dependencyResolutionManagement repositories { [...] maven { url \"https://numberly.jfrog.io/artifactory/android\" } } Add the dependency to your app level build.gradle file implementation 'com.numberly:sdk-android:x.x.x' Download latest SDK version After unarchiving the downloaded numberly-sdk-android-x.x.x.zip file, include the sdk-x.x.x.aar in your android/app/libs folder. Make sure your lib folder is included in your app level build.gradle with its dependencies apply plugin: 'kotlin-kapt' [...] dependencies { implementation fileTree ( dir: 'libs' , include: [ '*.aar' ]) api 'com.google.firebase:firebase-messaging:23.0.0' api \"org.jetbrains.kotlin:kotlin-stdlib:1.4.30\" api 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.4.3' api 'androidx.lifecycle:lifecycle-extensions:2.2.0' api 'com.android.volley:volley:1.2.1' api 'androidx.room:room-runtime:2.4.0' implementation 'androidx.core:core-ktx:1.7.0' kapt 'androidx.room:room-compiler:2.4.0' [...] } Important Download the numberly-sdk-android-x.x.x.zip not the source code zip.","title":"1. Install the SDK"},{"location":"#2-create-and-add-the-configuration-file","text":"Create the numberly.properties file in the application\u2019s assets folder located at android/app/src/main/assets app_key = the app key provided by numberly notification_icon_name = your icon resource name. Tip If you need specific configuration for your SDK based on build types or product flavors, just add another numberly.properties file in the targeted flavor / build type For example: to add specific configuration for an integ flavor, add the config file to the android/app/src/integ/assets folder ! Tip Icon drawables should be inside android/app/res/drawable . You can create on by right-click on drawable > New > Image Asset > Notification Icons","title":"2. Create and add the configuration file"},{"location":"#options","text":"You can customize the configuration with the following properties: Key Type Required Default Description app_key String The app key provided by Numberly. notification_icon_name String The icon resource name. It will be the icon used in Android's notification center notification_icon_color String #FFFFFFFF The icon color in hexadecimal format. Default is white. app_env String The app environment (dev, staging, prod...)","title":"Options"},{"location":"#3-add-the-firebase-configuration-file","text":"Important This guide assumes that you've already configured your android application to connect to Firebase . If this is not the case, please flow this instructions to do so. Add the google-services.json file to /android/app .","title":"3. Add the Firebase configuration file"},{"location":"#4-start-the-sdk","text":"Here we are! Now you can simply init Numberly in the Application's onCreate method Note You will need to have a custom Application file for this Follow this guide on how to do so. Kotlin Java override fun onCreate () { super . onCreate () Numberly . init ( this ) [ ... ] } @Override public void onCreate () { super . onCreate (); Numberly . init ( this ); [ ... ] }","title":"4. Start the SDK"},{"location":"#troubleshooting","text":"If you want to validate your implementation you can active the Numberly logs: Kotlin Java Numberly . setDebugMode ( true ) Numberly . setDebugMode ( true ); Tips It's highly recommended to disable logs on production.","title":"Troubleshooting"},{"location":"CHANGELOG/","text":"Android SDK Changelog \u00b6 1.2.0 \u00b6 Released on 2022-04-05. Repository URL is now https://numberly.jfrog.io/artifactory/android inside project build.gradle Dependency name is now com.numberly:sdk-android inside app build.gradle Critical issue Android 12 / API 31, FLAG is required on Intent Bug fixes on opening notifications Technical maintenance and upgrades 1.1.4 \u00b6 Released on 2021-03-09. Fix performing action received from push notification 1.1.3 \u00b6 Released on 2020-12-29. Hotfix: Parsing notification id 1.1.2 \u00b6 Released on 2020-12-28. Reset color notification if empty in config file 1.1.1 \u00b6 Released on 2020-12-28. Fixed optional params in config file Added areNotificationsEnabled method 1.1.0 \u00b6 Released on 2020-12-24. Configure SDK using numberly.properties file 1.0.1 \u00b6 Released on 2020-12-23. Fixed token callback issue 1.0.0 \u00b6 Released on 2020-12-23. Tracking open push event 0.1.0 \u00b6 Released on 2020-04-23. Initial version","title":"Release Notes"},{"location":"CHANGELOG/#android-sdk-changelog","text":"","title":"Android SDK Changelog"},{"location":"CHANGELOG/#120","text":"Released on 2022-04-05. Repository URL is now https://numberly.jfrog.io/artifactory/android inside project build.gradle Dependency name is now com.numberly:sdk-android inside app build.gradle Critical issue Android 12 / API 31, FLAG is required on Intent Bug fixes on opening notifications Technical maintenance and upgrades","title":"1.2.0"},{"location":"CHANGELOG/#114","text":"Released on 2021-03-09. Fix performing action received from push notification","title":"1.1.4"},{"location":"CHANGELOG/#113","text":"Released on 2020-12-29. Hotfix: Parsing notification id","title":"1.1.3"},{"location":"CHANGELOG/#112","text":"Released on 2020-12-28. Reset color notification if empty in config file","title":"1.1.2"},{"location":"CHANGELOG/#111","text":"Released on 2020-12-28. Fixed optional params in config file Added areNotificationsEnabled method","title":"1.1.1"},{"location":"CHANGELOG/#110","text":"Released on 2020-12-24. Configure SDK using numberly.properties file","title":"1.1.0"},{"location":"CHANGELOG/#101","text":"Released on 2020-12-23. Fixed token callback issue","title":"1.0.1"},{"location":"CHANGELOG/#100","text":"Released on 2020-12-23. Tracking open push event","title":"1.0.0"},{"location":"CHANGELOG/#010","text":"Released on 2020-04-23. Initial version","title":"0.1.0"},{"location":"push-notifications/","text":"Push Notifications \u00b6 Push notifications allow an app that isn\u2019t running in the foreground to notify the user when it has information for them. Push notifications originate from a notification server and are pushed to your app on a user\u2019s device. Setup Push Notifications \u00b6 By default, Numberly handles the FirebaseMessagingService implementation that receives the notifications and forward them to the notification center. Listening to push related events \u00b6 The Push module offers some great helpers and callbacks, you just need to set it's callback which implements the NLPushCallback protocol Kotlin Java class MyApplication : Application (), NLPushCallback { override fun onCreate () { super . onCreate () [ ... ] // Don't forget to initialize the SDK first Numberly . setPushActionCallback ( this ) } override fun pushOpenedWithData ( data : JSONObject ) { // TODO implement logic for the extra data received by the opened notification NLLog . debug ( TAG , data . toString ()) } } public class MyApplication extends Application implements NLPushCallback { @Override public void onCreate () { super . onCreate (); [ ... ] // Don't forget to initialize the SDK first Numberly . setPushActionCallback ( this ); } @Override public void pushOpenedWithData ( JSONObject data ) { // TODO implement logic for the extra data received by the opened notification NLLog . debug ( TAG , data . toString ()); } } Retrieving the current token \u00b6 You can retrieve the current Firebase token anywhere inside your app Kotlin Java Numberly . getPushToken ( applicationContext , object : NLTokenCallback { override fun onTokenReceived ( token : String ) { // Do something amazing with your token ! NLLog . debug ( TAG , \"Token: $ token \" ) } }) Numberly . getPushToken ( new NLTokenCallback () { @Override void onTokenReceived ( String token ) { // Do something amazing with your token ! NLLog . debug ( TAG , \"Token: \" + token ) } })","title":"Push Notifications"},{"location":"push-notifications/#push-notifications","text":"Push notifications allow an app that isn\u2019t running in the foreground to notify the user when it has information for them. Push notifications originate from a notification server and are pushed to your app on a user\u2019s device.","title":"Push Notifications"},{"location":"push-notifications/#setup-push-notifications","text":"By default, Numberly handles the FirebaseMessagingService implementation that receives the notifications and forward them to the notification center.","title":"Setup Push Notifications"},{"location":"push-notifications/#listening-to-push-related-events","text":"The Push module offers some great helpers and callbacks, you just need to set it's callback which implements the NLPushCallback protocol Kotlin Java class MyApplication : Application (), NLPushCallback { override fun onCreate () { super . onCreate () [ ... ] // Don't forget to initialize the SDK first Numberly . setPushActionCallback ( this ) } override fun pushOpenedWithData ( data : JSONObject ) { // TODO implement logic for the extra data received by the opened notification NLLog . debug ( TAG , data . toString ()) } } public class MyApplication extends Application implements NLPushCallback { @Override public void onCreate () { super . onCreate (); [ ... ] // Don't forget to initialize the SDK first Numberly . setPushActionCallback ( this ); } @Override public void pushOpenedWithData ( JSONObject data ) { // TODO implement logic for the extra data received by the opened notification NLLog . debug ( TAG , data . toString ()); } }","title":"Listening to push related events"},{"location":"push-notifications/#retrieving-the-current-token","text":"You can retrieve the current Firebase token anywhere inside your app Kotlin Java Numberly . getPushToken ( applicationContext , object : NLTokenCallback { override fun onTokenReceived ( token : String ) { // Do something amazing with your token ! NLLog . debug ( TAG , \"Token: $ token \" ) } }) Numberly . getPushToken ( new NLTokenCallback () { @Override void onTokenReceived ( String token ) { // Do something amazing with your token ! NLLog . debug ( TAG , \"Token: \" + token ) } })","title":"Retrieving the current token"},{"location":"migration-guides/0-1_to_1-1/","text":"Migration guide from 0.1 to 1.1 \u00b6 This guide will help you migrate from the 0.1 version to the 1.1. Requirements \u00b6 Android minimum version \u00b6 Numberly 1.1 requires minimum sdk version 16 or higher. Gradle distribution version \u00b6 Numberly 1.1 requires gradle distribution 6.5 or higher. Setup Instructions \u00b6 Starting from this 1.1, the Android SDK is distributed using jCenter. 1. Remove previous integration \u00b6 Remove the nlpushlibrary.aar file from the lib folder. In the project level build.gradle file, remove the following lines : flatDir { dirs 'libs' } In the app level build.gradle file, remove the nlpushlibrary dependency compile ( name: 'nlpushlibrary' , ext: 'aar' ) Remove your custom FirebaseMessagingService implementation by removing the service tag in your AndroidManifest.xml and your custom class associated that extends FirebaseMessagingService . <service android:name= \".MyFirebaseMessagingService\" android:stopWithTask= \"false\" > <intent-filter> <action android:name= \"com.google.firebase.MESSAGING_EVENT\" /> </intent-filter> </service> Finally in your custom Application class, remove the small icon resource initialization Kotlin Java Numberly . setSmallIconResourceId ( R . mipmap . ic_launcher ) Numberly . setSmallIconResourceId ( R . mipmap . ic_launcher ); Great! Let's install the 1.1 version. 2. Install the new version \u00b6 The 1.x version can be installed using gradle or manually. Please follow the installation guide before continuing the migration. 3. Add the configuration file \u00b6 Add the numberly.properties as explained here . Important You should set both automatic_integration and automatic_notification_registration properties to false . 4. Start the SDK \u00b6 As from the 1.x version, Numberly SDK must be started in the Application class's onCreate method: Kotlin Java import android.app.Application import com.numberly.Numberly class MyApplication : Application () { override fun onCreate () { super . onCreate () Numberly . init ( this ) [ ... ] } } import android.app.Application import com.numberly.Numberly class MyApplication extends Application { @override void onCreate () { super . onCreate (); Numberly . init ( this ); [ ... ] } }","title":"From 0.1 to 1.0"},{"location":"migration-guides/0-1_to_1-1/#migration-guide-from-01-to-11","text":"This guide will help you migrate from the 0.1 version to the 1.1.","title":"Migration guide from 0.1 to 1.1"},{"location":"migration-guides/0-1_to_1-1/#requirements","text":"","title":"Requirements"},{"location":"migration-guides/0-1_to_1-1/#android-minimum-version","text":"Numberly 1.1 requires minimum sdk version 16 or higher.","title":"Android minimum version"},{"location":"migration-guides/0-1_to_1-1/#gradle-distribution-version","text":"Numberly 1.1 requires gradle distribution 6.5 or higher.","title":"Gradle distribution version"},{"location":"migration-guides/0-1_to_1-1/#setup-instructions","text":"Starting from this 1.1, the Android SDK is distributed using jCenter.","title":"Setup Instructions"},{"location":"migration-guides/0-1_to_1-1/#1-remove-previous-integration","text":"Remove the nlpushlibrary.aar file from the lib folder. In the project level build.gradle file, remove the following lines : flatDir { dirs 'libs' } In the app level build.gradle file, remove the nlpushlibrary dependency compile ( name: 'nlpushlibrary' , ext: 'aar' ) Remove your custom FirebaseMessagingService implementation by removing the service tag in your AndroidManifest.xml and your custom class associated that extends FirebaseMessagingService . <service android:name= \".MyFirebaseMessagingService\" android:stopWithTask= \"false\" > <intent-filter> <action android:name= \"com.google.firebase.MESSAGING_EVENT\" /> </intent-filter> </service> Finally in your custom Application class, remove the small icon resource initialization Kotlin Java Numberly . setSmallIconResourceId ( R . mipmap . ic_launcher ) Numberly . setSmallIconResourceId ( R . mipmap . ic_launcher ); Great! Let's install the 1.1 version.","title":"1. Remove previous integration"},{"location":"migration-guides/0-1_to_1-1/#2-install-the-new-version","text":"The 1.x version can be installed using gradle or manually. Please follow the installation guide before continuing the migration.","title":"2. Install the new version"},{"location":"migration-guides/0-1_to_1-1/#3-add-the-configuration-file","text":"Add the numberly.properties as explained here . Important You should set both automatic_integration and automatic_notification_registration properties to false .","title":"3. Add the configuration file"},{"location":"migration-guides/0-1_to_1-1/#4-start-the-sdk","text":"As from the 1.x version, Numberly SDK must be started in the Application class's onCreate method: Kotlin Java import android.app.Application import com.numberly.Numberly class MyApplication : Application () { override fun onCreate () { super . onCreate () Numberly . init ( this ) [ ... ] } } import android.app.Application import com.numberly.Numberly class MyApplication extends Application { @override void onCreate () { super . onCreate (); Numberly . init ( this ); [ ... ] } }","title":"4. Start the SDK"}]}